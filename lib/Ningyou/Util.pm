package Ningyou::Util;

use Moose;
use Data::Dumper;
use Sys::Facter;
use namespace::autoclean;

with 'Ningyou::Debug', 'Ningyou::Verbose', 'Ningyou::Out';

# VERSION: generated by DZP::OurPkgVersion

has 'options' => (
    is      => 'rw',
    isa     => 'HashRef',
    reader  => 'get_options',
    writer  => 'set_options',
    default => sub { return {}; },
    required => 1,
);

my $id = q{ } x 10;

sub source_to_fqfn {
    my ( $s, $i ) = @_;
    my $wt = exists $i->{worktree} ? $i->{worktree} : die "no [worktree]";
    my $mo = exists $i->{module}   ? $i->{module}   : die "no [module]";
    my $so = exists $i->{source}   ? $i->{source}   : return undef;
    my $oso = $so;
    die "Malformed URL! [$so] is not of the form [ningyou:///<MODULE>/*]\n"
        if not $so =~ m{ningyou:///.+}mx;

    $s->d("$id source_to_fqfn: [$so] -> - worktree");
    $so =~ s{ningyou:///modules/}{$wt/};
    $s->d("$id source_to_fqfn: [$so] -> + files");
    $so =~ s{/$mo/}{/$mo/files/};
    $s->d("$id source_to_fqfn: [$so]  -> -e");
    $s->v("$id source URL [$oso] points to [$so]");

    return $so;
}

sub file_md5_eq {
    my ( $s, $ca, $fn1, $fn2 ) = @_;
    my $d1 = $s->get_md5( $ca, $fn1 );
    my $d2 = $s->get_md5( $ca, $fn2 );
    return 1 if $d1 eq $d2;
    return 0;
}

sub get_md5 {
    my ( $s, $ca, $fn ) = @_;
    my $ctx = Digest::MD5->new;
    open my $f, q{<}, $fn or die "Can not read [$fn]!\n";
    $ctx->addfile($f);
    my $digest = $ctx->hexdigest;
    close $f;

    $s->d("$id calculate md5 [$digest]");
    $ca->{$fn} = $digest;
    return $digest;
}

sub get_facts {
    my ( $s, $i ) = @_;

    my $f = {};

    my $sf = Sys::Facter->new();

    $s->d( Dumper($sf) );
    $sf->load('operatingsystem');

    $s->d( Dumper $sf->facts );
    $f->{dist}   = defined $sf->operatingsystem ? $sf->operatingsystem : 'na';
    $f->{kernel} = defined $sf->kernel          ? $sf->kernel          : 'na';
    $f->{host}   = defined $sf->hostname        ? $sf->hostname        : 'na';
    $f->{domain} = defined $sf->domain          ? $sf->domain          : 'na';
    $f->{fqdn}   = "$f->{host}.$f->{domain}";

    return $f;
}

1;

__END__

=pod

=head1 NAME

Ningyou::Util - aux. utils for Ningyou

=cut

