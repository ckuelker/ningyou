#!/usr/bin/perl
# PODNAME: Ningyou
# ABSTRACT: Ningyou command line tool
# +---------------------------------------------------------------------------+
# | ningyou                                                                   |
# |                                                                           |
# | Ningyou command line tool                                                 |
# |                                                                           |
# | Version: 0.1.1                                                            |
# |                                                                           |
# | Changes:                                                                  |
# |                                                                           |
# | 0.1.1 2020-01-05 Christian Kuelker <c@c8i.org>                            |
# |     - checksum action                                                     |
# |                                                                           |
# | 0.1.0 2019-04-18 Christian Kuelker <c@c8i.org>                            |
# |     - initial release                                                     |
# |                                                                           |
# +---------------------------------------------------------------------------+
###!/usr/bin/perl -CSDA
use warnings;
use strict;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";

use Deploy::Ningyou;

my $n = Deploy::Ningyou->new();
$n->begin( {} );

1;
__END__

=pod

=head1 NAME

B<Ningyou>

=head1 SYNOPSIS

ningyou [OPTIONS] B<ARGUMENTS> [SCOPE]

ningyou [OPTIONS] B<checksum> <FILE>

ningyou [OPTIONS] B<module> <NAME>

=head1 OPTIONS

=over 4

=item B<--help> : prints a brief message and exists

=item B<--main-configuration-only> : see B<bootstrap> argument

=item B<--man> : prints man page in a pager

=item B<--verbose> : prints more information in regard to arguments

=item B<--version> : prints the B<Ningyou> project version number and exits

=back

=head1 ARGUMENTS

=over 4

=item B<apply>

Apply pending changes (if any) in conformance with the configuration to the
file system. This will actually execute commands and can damage the system.
Use the B<script> option - probably together with B<--verbose> to understand
what will be done.

=item B<bootstrap>

Set up B<Ningyou> and creates F<~/.ningyou.ini>, F<.gitconfig> (if not
present) and a git repository F<deploy> in the current working directory. To
specify a different place, name or use an existing repository specify the fully
qualified path like so:

    ningyou bootstrap /my/special/reporsitory

In this case the git repository is B<not> created if present.

=item B< --main-configuration-only>

This will recreate the main configuration under F<~/.ningyou.ini> without
touching the working tree, in case F<~/.ningyou.ini> was lost or the
I<worktree> is managed independently or externally.

=item B<checksum FILE>

This will calculate the checksum for the given file and update the manifest

Example:

    cd /srv/deploy/client/modules/default/files/
    ningyou checksum vimrc

Will update the checksum attribute in the corresponding I<file> section in the
manifest F</srv/deploy/client/modules/default/manifests/vim.ini>:

    [file:/root/.vimrc]
    source=/srv/deploy/client/modules/default/files/vimrc
    checksum=36613c87b1add62e21e24a8cb3188924
    owner=root
    group=root
    mode=640
    ensure=latest

=item B<help> (same as --help)

Prints brief help message. For more information: B<--man> or action 'man'.

=item B<list>

Prints a list of all configured I<modules> and its version if the version
I<provider> was added to the I<module> configuration. See 'status' for more
information.

=item B<man> (same as --man)

Prints a longer man page. More information: F<MANUAL.md> or F<MANUAL.pdf>.

=item B<module> <NAME>

Creates a new I<module> stub inside the directory F<NAME>. Should be used
inside a F<modules> directory usually by a user and not by C<root>.

=item B<script>

Prints a shell script to C<STDOUT> what 'apply' would do. If used with
B<--verbose> it will add explanations.

=item B<status>

Prints information about all B<Ningyou> I<modules>, if configured or not, and
their state: applied (DONE) or not applied/pending (TODO). The B<--verbose>
option will print more information about each I<section> of the configuration.

=back

=head1 SCOPE

The scope can be a name of a I<module>, the keyword 'all' or it can be omitted.
If omitted 'all' is the default value.

=head1 FILE

The file can be a name of a I<file> in the I<files> section of a module. It
should be a single name, not absolute or relative.

=head1 ENVIRONMENT VARIABLES

=over 4

=item B<NINGYOU_DEBUG=FILENAME>

Switches B<Ningyou> into debug mode and print many information to the filename
provided.

=back

=head1 DESCRIPTION

The B<ningyou> command line tool can be used to deploy software
according to a simple configuration. The tool can be used to perform I<actions>
described in the C<ARGUMENTS> section. Possible I<actions> are: list,
status, script, apply, bootstrap and module.

More information can be obtained by the provided documentation:

=over 4

=item * F<README.md> - start reading this

=item * F<INSTALL.md> - one simple install method

=item * F<USAGE.md> - one simple usage example

=item * F<MANUAL.md> - comprehensive information

=item * F<MANUAL.pdf> - same, but nicer

=back

=head1 EXAMPLES

 ningyou --version                   : print Ningyou project version number

 ningyou help                        : show brief help message (same as --help)
 ningyou --help                      : show brief help message
 ningyou man                         : show man page (same as --man)
 ningyou --man                       : show man page

 ningyou bootstrap                   : creates ~/.ningyou.ini ~/.gitconfig (if
                                       not present) and ./deploy git repository
                                       in current working directory
 ningyou bootstrap /src/dply         : creates ~/.ningyou.ini ~/.gitconfig (if
                                       not present) and uses /srv/dply git
                                       repository

 ningyou list                        : list enabled modules

 ningyou status                      : print brief information about modules
 ningyou --verbose status            : print information about all section
 ningyou --verbose status global:zsh : print information about zsh module only

 ningyou script                      : print bash script
 ningyou --verbose script            : print bash script with explanations

 ningyou apply                       : execute commands (see ningyou script)
 ningyou --verbose apply             : execute commands with expanations

 ningyou checksum vimrc              : updates checksum attribut of manifest

=cut


